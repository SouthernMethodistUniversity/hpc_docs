#!/bin/bash
module purge

# load the requested module
module use /users/jlagrone/repos/hpc_docs/modules/m3/applications/
module load <%= context.r_module %>

# Clustom environment settings
<%- unless context.environment.blank? -%>
env
<%= context.environment.encode(universal_newline: true) %>
<%- end -%>

#
# Start RStudio Server
#

# PAM auth helper used by RStudio
export RSTUDIO_AUTH="${PWD}/bin/auth"

# Export environment
export > "${PWD}/environment.txt"

# Generate an `rsession` wrapper script
export RSESSION_WRAPPER_FILE="${PWD}/rsession.sh"
(
umask 077
sed 's/^ \{2\}//' > "${RSESSION_WRAPPER_FILE}" << EOL
  #!/bin/bash

  # Source environment
  source "${PWD}/environment.txt"

  # Log all output from this script
  export RSESSION_LOG_FILE="${PWD}/rsession.log"
  exec &>>"\${RSESSION_LOG_FILE}"

  # make sure nothing uses more threads than is requested
  export OMP_NUM_THREADS=${SLURM_CPUS_ON_NODE}

  # Launch the original command
  echo "Launching rsession..."
  set -x
  exec ${CONTAINER_RSESSION} --r-libs-user "${R_LIBS_USER}" --session-timeout-minutes=<%= context.rserver_timeout %> "\${@}"
EOL
)
chmod 700 "${RSESSION_WRAPPER_FILE}"

# Create a unique $TMPDIR for runtime files
export TMPDIR="$(mktemp -d)"
mkdir -p -m 700 ${TMPDIR}/run ${TMPDIR}/lib ${TMPDIR}/tmp ${TMPDIR}/var/lib/rstudio-server

export WORKING_DIR=${PWD}
mkdir -p -m 700 ${WORKING_DIR}/etc

# Set working directory to home directory
cd "${HOME}"

# Output debug info
module list

# Launch the RStudio Server
echo "Starting up rserver..."
set -x

apptainer exec \
  -B ${TMPDIR}:/tmp \
  -B ${TMPDIR}/run:/run \
  -B ${TMPDIR}/var/lib:/var/lib/rstudio-server \
  -B ${WORKING_DIR} \
  -B ${WORKING_DIR}/etc:/etc/rstudio \
  -B ${SCRATCH} \
  -B ${WORK} \
  ${CONTAINER_IMAGE} \
  ${CONTAINER_RSERVER} \
  --www-port "${port}" \
  --auth-none 0 \
  --auth-pam-helper-path "${RSTUDIO_AUTH}" \
  --auth-encrypt-password 0 \
  --server-user "${USER}" \
  --rsession-path "${RSESSION_WRAPPER_FILE}" \
  --server-data-dir "${TMPDIR}" \
  --secure-cookie-key-file "${TMPDIR}/rstudio-server/secure-cookie-key" \
  --rsession-which-r="${CONTAINER_R}"

printf 'rserver exited' 1>&2
