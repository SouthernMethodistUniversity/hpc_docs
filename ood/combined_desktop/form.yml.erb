<%-
require 'open3'

# check queues
class CheckQueues

  @cache = ActiveSupport::Cache::FileStore.new("/users/#{User.new.name}/.cache/OpenOnDemand/", :expires_in => 1.minute)

  def self.GetQueues()
    begin
      # get list of queues from sinfo
      script = "/hpc/sys/apps/slurm/current/bin/sinfo --hide -ho '%R %l %c %m %G'"
      o, status = Open3.capture2e(script)
      tmp_output = o.split("\n")

      output = []
      tmp_output.each do |q|
        params = q.gsub(/\s+/m, ' ').strip.split(" ")

        # convert time to hours
        hours = 0
        tmp = params[1].split("-")
        if tmp.count == 2
          hours = hours + 24*tmp[0].to_i
          hours = hours + tmp[1].split(":")[0].to_i
        else
          hours = hours + tmp[0].split(":")[0].to_i
        end
        params[1] = hours

        # convert memory to GB (implicit floor division)
        params[3] = params[3].to_i / 1024

        # get number of gpus
        if params[4] == "(null)"
          params[4] = 0
        else
          params[4] = params[4].split(":")[-1]
        end

        # if HTC, set cores to 1
        if params[0] == "htc"
          params[2] = 1
        end

        # only keep queues with time limits <= 24 hours
        # or highmem
        if (hours < 25 || params[0] == "highmem")
          # set the time limit to 12 hours or max queue time
          params[1] = [params[1].to_i, 12].min
          output.push(params) 
        end
      end
      return output
    end
  end

  def self.Queues
    begin
      @Queues = @cache.fetch("#{User.new.name}/queues", race_condition_ttl: 30.seconds) do
        self.GetQueues()
      end
      return @Queues
    end
  end
end

-%>

---

title: "Remote Desktop"
cluster: "m3cluster"
submit: submit.yml.erb

form:
  - custom_queues
  - desktop_os
  - desktop_env
  - bc_num_hours
  - bc_vnc_idle
  - bc_num_cores
  - bc_num_memory
  - bc_vnc_resolution
  - bc_num_gpus

attributes:
  custom_queues:
    label: "Partition"
    widget: select
    help: |
      Please select the [SLURM partition] to submit the job to.
      [SLURM partition]: https://southernmethodistuniversity.github.io/hpc_docs/about/queues.html#m3-queues
    options:
    <%- CheckQueues.Queues.each do |q| -%>
      - ["<%= q[0] %>", "<%= q[0] %>",
        data-max-bc-num-hours: "<%= q[1] %>",
        data-max-bc-num-cores: "<%= q[2] %>",
        data-max-bc-num-memory: "<%= q[3] %>",
        data-set-bc-num-gpus: "<%= q[4] %>",
        <%- if q[4].to_i == 0 -%>
        data-hide-bc-num-gpus: true,
        data-show-desktop-os: true,
        <%- else -%>
        data-show-bc-num-gpus: true,
        <%- end -%>
        ]
      <%- end -%>
  desktop_os:
    label: "Operating System"
    widget: select
    help: |
      Please Select Operating System.
      NOTE: AlmaLinux is available to support some legacy applications. Some features of M3 will be unavailable. AlmaLinux is not available on the `gpu-dev` queue.
    options:
      - ["Ubuntu 22.04", "/hpc/m3/containers/remote_desktop/remote_desktop_1.1.sif",
        data-set-desktop-env: 'mate',
        <%- CheckQueues.Queues.each do |q| -%>
          <%- if q[4].to_i == 0 -%>
        <%= "data-option-for-custom-queues-" + q[0].strip + ": true," %>
          <%- else -%>
        <%= "data-option-for-custom-queues-" + q[0].strip + ": false," %>
          <%- end -%>
        <%- end -%>
        ]
      - ["Ubuntu 22.04, GPU enabled", "/hpc/m3/containers/remote_desktop/remote_desktop_1.1_gpu.sif",
        data-set-desktop-env: 'mate',
        <%- CheckQueues.Queues.each do |q| -%>
          <%- if q[4].to_i == 0 -%>
        <%= "data-option-for-custom-queues-" + q[0].strip + ": false," %>
          <%- else -%>
        <%= "data-option-for-custom-queues-" + q[0].strip + ": true," %>
          <%- end -%>
        <%- end -%>
        ]
      - ["AlmaLinux 8", "/hpc/m3/containers/remote_desktop/almalinux_remote_desktop_1.0.0.sif",
        data-set-desktop-env: 'xfce',
        <%- CheckQueues.Queues.each do |q| -%>
          <%- if q[4].to_i == 0 -%>
        <%= "data-option-for-custom-queues-" + q[0].strip + ": true," %>
          <%- else -%>
        <%= "data-option-for-custom-queues-" + q[0].strip + ": false," %>
          <%- end -%>
        <%- end -%>
        ]
  bc_vnc_idle: 2700
  bc_num_hours:
    label: Time (Hours)
    help: |
      - Number of hours to allocate (maximum 12 hours)
      - Exceeding walltime time will automaticaly stop this job.
    cacheable: true
    widget: number_field
    max: 12
    min: 1
    step: 1
    value: 1
  bc_num_cores:
    label: "Cores per node"
    help: Number of CPU threads
    cacheable: true
    widget: number_field
    max: 128
    min: 1
    value: 1
  bc_num_memory:
    label: "Memory"
    help: "Please select the amount of memory (in GB) you need for your job."
    widget: number_field
    max: 500
    min: 1
    step: 1
    value: 4
  bc_vnc_resolution:
    required: true
  desktop_env:
    widget: hidden_field
  bc_num_gpus:
    label: "Number of GPUs"
    help: "Please select the number of GPUs for your job"
    widget: number_field
    max: 8
    min: 0
    step: 0
    value: 1
