Bootstrap: docker
From: ubuntu:22.04

%labels
    Author John LaGrone <jlagrone@smu.edu>
    Version 1.0
    Framework Open OnDemand
    Distribution Ubuntu 22.04
    Application Remote Desktops

%apprun vncserver
  exec vncserver "${@}"

%apprun vncpasswd
  exec vncpasswd "${@}"

%apprun websockify
  exec /opt/websockify/run "${@}"

%runscript
  exec vncserver "${@}"

%environment
  export PATH=/opt/TurboVNC/bin:/opt/VirtualGL/bin:${PATH}

%files

  # properly init zsh profiles
  # copy from m3 to container
  # zsh fails to install if we copy to /etc/zsh 
  # so copy to /opt and mv later
  /etc/zsh/zshenv /opt/zshenv

%post
  export TURBOVNC_VERSION=3.1.1
  export VIRTUALGL_VERSION=3.1.1
  export LIBJPEG_VERSION=3.0.1

  # probably way more than we need
  apt-get -y update
  DEBIAN_FRONTEND=noninteractive apt-get -y install \
               lua5.3 \
               lua5.4 \
               lua-bit32:amd64 \
               lua-posix:amd64 \
               lua-posix-dev \
               lua-filesystem \
               liblua5.3-0:amd64 \
               liblua5.3-dev:amd64 \
               liblua5.4-0:amd64 \
               liblua5.4-dev:amd64 \
               tcl \
               tcl-dev \
               tcl8.6 \
               tcl8.6-dev:amd64 \
               libtcl8.6:amd64 \
               libmunge-dev \
               zsh \
               tcsh \
               ksh \
               x11-utils \
               xauth \
               infiniband-diags \
               opensm \
               dbus-x11 \
               procps \
               psmisc \
               xdg-utils \
               xdg-user-dirs \
               menu-xdg \
               mime-support \
               desktop-file-utils \
               bash-completion \
               libegl1-mesa \
               mesa-utils-extra \
               libxv1 \
               lsb-release \
               ubuntu-mate-desktop \
               evince \
               gedit \
               emacs \
               nano \
               vim \
               novnc \
               python3-websockify \
               python3-numpy \
               lshw \
               net-tools \
               ca-certificates \
               locales \
               curl \
               gcc \
               gfortran \
               make \
               wget \
               git \
               strace \
               lsb \
               libxm4 \
               xsltproc \
               paraview \
               llvm-14-dev \
               clang-14

  # Configure default locale
  echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen
  locale-gen en_US.utf8
  /usr/sbin/update-locale LANG=en_US.UTF-8
  export LC_ALL=en_US.UTF-8
  export LANG=en_US.UTF-8

  # TurboVNC
  wget https://github.com/TurboVNC/turbovnc/releases/download/${TURBOVNC_VERSION}/turbovnc_${TURBOVNC_VERSION}_amd64.deb -q
  dpkg -i turbovnc_${TURBOVNC_VERSION}_amd64.deb
  rm turbovnc_${TURBOVNC_VERSION}_amd64.deb
 
  # VirtualGL 
  wget https://github.com/libjpeg-turbo/libjpeg-turbo/releases/download/${LIBJPEG_VERSION}/libjpeg-turbo-official_${LIBJPEG_VERSION}_amd64.deb -q
  wget https://github.com/VirtualGL/virtualgl/releases/download/${VIRTUALGL_VERSION}/virtualgl_${VIRTUALGL_VERSION}_amd64.deb -q
  dpkg -i libjpeg-turbo-official_${LIBJPEG_VERSION}_amd64.deb
  dpkg -i virtualgl_${VIRTUALGL_VERSION}_amd64.deb
  rm -f *.deb

  # add deps needed for ansys
  add-apt-repository ppa:linuxuprising/libpng12 -y
  apt-get -y update
  apt-get -y install libpng12-0 libjpeg62
  
  # Ansys statically links libldap-2.4.so.2
  # just symlink to a more recent version
  CURRENT_LDAP=$(find /usr/lib/x86_64-linux-gnu/ -type f -name libldap*)
  ln -s ${CURRENT_LDAP} /usr/lib/x86_64-linux-gnu/libldap-2.4.so.2

  # Matlab requirements (most of these should already be here)
  apt-get -y update
  DEBIAN_FRONTEND=noninteractive apt-get -y install \
	 ca-certificates\
	 libasound2\
	 libc6\
	 libcairo-gobject2\
	 libcairo2\
	 libcap2\
	 libcups2\
	 libdrm2\
	 libfontconfig1\
	 libgbm1\
	 libgdk-pixbuf-2.0-0\
	 libgl1\
	 libglib2.0-0\
	 libgstreamer-plugins-base1.0-0\
         libgstreamer1.0-0\
	 libgtk-3-0\
	 libice6\
	 libltdl7\
	 libnspr4\
	 libnss3\
	 libpam0g\
	 libpango-1.0-0\
	 libpangocairo-1.0-0\
	 libpangoft2-1.0-0\
	 libsndfile1\
	 libudev1\
	 libuuid1\
	 libwayland-client0\
	 libxcomposite1\
	 libxcursor1\
	 libxdamage1\
	 libxfixes3\
	 libxft2\
	 libxinerama1\
	 libxrandr2\
	 libxt6\
	 libxtst6\
	 libxxf86vm1\
	 locales\
	 locales-all\
	 net-tools\
	 procps\
	 unzip\
	 zlib1g


  # disable bluetooth
  sed -i 's/AutoEnable=true/AutoEnable=flase/g' /etc/bluetooth/main.conf
  rm /lib/systemd/system/blueman-mechanism.service
  rm /etc/xdg/autostart/blueman.desktop
  rm /etc/systemd/system/multi-user.target.wants/blueman-mechanism.service
  systemctl disable bluetooth.service

  # create symlinks for lmod
  rm /etc/zsh/zshenv
  mv /opt/zshenv /etc/zsh/zshenv
  ln -s /hpc/sys/apps/lmod/lmod/init/profile /etc/profile.d/z00_lmod.sh
  ln -s /hpc/sys/apps/lmod/lmod/init/cshrc /etc/profile.d/z00_lmod.csh

  # add chrome
  wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb -q
  apt install -y ./google-chrome-stable_current_amd64.deb
  rm -f *.deb

  # add --no-sandbox to chrome start
  sed -i 's\Exec=/usr/bin/google-chrome-stable\Exec=/usr/bin/google-chrome-stable --no-sandbox\g' /usr/share/applications/google-chrome.desktop

  # add vscode
  wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg
  install -D -o root -g root -m 644 packages.microsoft.gpg /etc/apt/keyrings/packages.microsoft.gpg
  echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" | tee /etc/apt/sources.list.d/vscode.list > /dev/null
  rm -f packages.microsoft.gpg

  apt-get -y update
  apt-get -y install code

  # add --no-sandbox to code
  sed -i 's\Exec=/usr/share/code/code\Exec=/usr/share/code/code --no-sandbox\g' /usr/share/applications/code.desktop

  # Clean up
  rm -rf /var/lib/apt/lists/*
